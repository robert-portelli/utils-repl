---
name: Upsert Default Branch Ruleset
on:
  workflow_dispatch:
    inputs:
      ruleset_path:
        description: "the path to the ruleset json"
        required: true
        type: string
        default: "./.github/rulesets/branch-default.json"
jobs:
  gate-admin:
    name: Check if caller is admin
    uses: ./.github/workflows/gate-admin.yaml
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
  gate-token:
    name: Check the caller token
    needs: gate-admin
    runs-on: ubuntu-latest
    outputs:
      context: ${{ steps.detect.outputs.context }}
    steps:
      - uses: actions/checkout@v4
      - name: Detect Token Context
        id: detect
        uses: ./.github/actions/gate-token
        with:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          CI_ADMIN: ${{ secrets.CI_ADMIN }}
  load-ruleset:
    name: Load Ruleset JSON and Ruleset Name
    needs: gate-token
    outputs:
      json: ${{ steps.load-prod.outputs.json }}
      ruleset_name: ${{ steps.load-prod.outputs.ruleset_name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Load production ruleset
        id: load-prod
        uses: ./.github/actions/load-json
        with:
          path: ${{ inputs.ruleset_path }}
  local-token:
    name: smoke the production ruleset and callback with it
    needs: [gate-token, load-ruleset]
    if: ${{ needs.gate-token.outputs.context == 'act' }}
    uses: ./.github/workflows/smoke-ruleset-default-branch.yaml
    with:
      json: ${{ needs.load-ruleset.outputs.json }}
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
      CI_ADMIN: ${{ secrets.CI_ADMIN }}
  core-upsert-ruleset:
    name: Upsert Ruleset
    needs: [gate-token, load-ruleset]
    if: ${{ needs.gate-token.outputs.context == 'github' }}
    uses: ./.github/workflows/core-upsert-ruleset.yaml
    with:
      json: ${{ needs.load-ruleset.outputs.json }}
      ruleset_name: ${{ needs.load-ruleset.outputs.ruleset_name }}
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
      CI_ADMIN: ${{ secrets.CI_ADMIN }}
