---
name: Smoke Test GitHub REST API Action
on:
  workflow_dispatch: {}
  workflow_call:
    secrets:
      GH_TOKEN:
        required: true
      CI_ADMIN:
        required: true
jobs:
  matrix-smoke-test:
    name: Matrix Test github-rest-api
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test_case: [get-metadata, post-polling, get-bad-token]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: GET repo metadata
        if: matrix.test_case == 'get-metadata'
        id: get
        uses: ./.github/actions/github-rest-api
        with:
          method: GET
          endpoint: /repos/${{ github.repository }}
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          extract: '.full_name'
      - name: "Assert HTTP status: ${{ matrix.test_case }}"
        if: ${{ matrix.test_case == 'get-metadata' && steps.get.outputs.status !=
          '200' }}
        run: |-
          echo "‚ùå Unexpected HTTP status code: ${{ steps.get.outputs.status }}"
          exit 1
      - name: Verify extracted repo full_name
        if: matrix.test_case == 'get-metadata'
        run: |-
          echo "Extracted: '${{ steps.get.outputs.result }}'"
          [[ "${{ steps.get.outputs.result }}" == "${GITHUB_REPOSITORY}" ]] || {
            echo "‚ùå Unexpected repository full_name"
            exit 1
          }
          echo "‚úÖ Passed: GET repo metadata"
      - name: POST + polling test (check repo visibility)
        if: matrix.test_case == 'post-polling'
        id: poll
        uses: ./.github/actions/github-rest-api
        with:
          method: GET
          endpoint: /repos/${{ github.repository }}
          token: ${{ secrets.CI_ADMIN }}
          extract: '.visibility'
          expected: 'public'
          retries: 5
          delay: 2
      - name: "Assert HTTP status: ${{ matrix.test_case }}"
        if: ${{ matrix.test_case == 'post-polling' && steps.poll.outputs.status !=
          '200' }}
        run: |-
          echo "‚ùå Unexpected HTTP status code: ${{ steps.poll.outputs.status }}"
          exit 1
      - name: üß™ Check visibility polling result
        if: matrix.test_case == 'post-polling'
        run: |-
          echo "Extracted: '${{ steps.poll.outputs.result }}'"
          [[ "${{ steps.poll.outputs.result }}" == "public" ]] || {
            echo "‚ùå Visibility not as expected"
            exit 1
          }
          echo "‚úÖ Passed: Polling with expected value"
      - name: Simulate failure with bad token
        if: matrix.test_case == 'get-bad-token'
        id: fail
        continue-on-error: true
        uses: ./.github/actions/github-rest-api
        with:
          method: GET
          endpoint: /repos/${{ github.repository }}
          token: dummy_invalid_token
          extract: '.full_name'
      - name: "Assert HTTP status: ${{ matrix.test_case }}"
        if: ${{ matrix.test_case == 'get-bad-token' && steps.fail.outputs.status !=
          '401' }}
        run: |-
          echo "‚ùå Unexpected HTTP status code: ${{ steps.fail.outputs.status }}"
          exit 1
      - name: üß™ Ensure failure occurred
        if: matrix.test_case == 'get-bad-token'
        run: |-
          if [[ "${{ steps.fail.outcome }}" != "failure" ]]; then
            echo "‚ùå Expected failure but got success"
            exit 1
          fi
          echo "‚úÖ Passed: Bad token triggers error"
