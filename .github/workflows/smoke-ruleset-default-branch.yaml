---
name: Smoke Test Default Branch Ruleset Workflow
on:
  workflow_dispatch:
    inputs:
      json:
        description: "Default Branch Ruleset JSON body."
        required: true
        type: string
  workflow_call:
    inputs:
      json:
        description: "Default Branch Ruleset JSON body."
        required: true
        type: string
    secrets:
      GH_TOKEN:
        required: true
      CI_ADMIN:
        required: true
jobs:
  prepare-smoked-ruleset:
    name: Modify the ruleset to prevent collisions
    runs-on: ubuntu-latest
    outputs:
      smoked_json: ${{ steps.inject.outputs.smoked_json }}
      smoked_ruleset_name: ${{ steps.name.outputs.ruleset_name }}
    steps:
      - name: Inject "smoke:" into ruleset name
        id: inject
        run: |
          {
          modified_json="$(echo '${{ inputs.json }}' | jq '.name |= "smoke \(. + "")"')"
          echo "smoked_json<<EOF"
          echo "$modified_json"
          echo "EOF"
          } >> "$GITHUB_OUTPUT"
      - name: Extract ruleset name
        id: name
        run: |
          ruleset_name="$(echo '${{ steps.inject.outputs.smoked_json }}' | jq -r '.name')"
          echo "ruleset_name=$ruleset_name" >> "$GITHUB_OUTPUT"
  post-smoked-ruleset:
    name: post the smoked ruleset
    needs: prepare-smoked-ruleset
    uses: ./.github/workflows/ruleset-default-branch.yaml
    with:
      json: ${{ needs.prepare-smoked-ruleset.outputs.smoked_json }}
      ruleset_name: ${{ needs.prepare-smoked-ruleset.outputs.smoked_ruleset_name }}
      called_from_smoke_test: true
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
      CI_ADMIN: ${{ secrets.CI_ADMIN }}
  find-smoked-ruleset-id:
    name: assert that the ruleset was created
    needs: [prepare-smoked-ruleset, post-smoked-ruleset]
    uses: ./.github/workflows/fetch-ruleset-id.yaml
    with:
      ruleset_name: ${{ needs.prepare-smoked-ruleset.outputs.smoked_ruleset_name }}
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
  validate-smoke-ruleset:
    runs-on: ubuntu-latest
    needs: [prepare-smoked-ruleset, post-smoked-ruleset, find-smoked-ruleset-id]
    steps:
      - name: Fetch the smoke ruleset JSON
        id: fetch
        uses: ./.github/actions/github-rest-api
        with:
          method: GET
          endpoint: /repos/${{ github.repository }}/rulesets/${{ needs.find-smoked-ruleset-id.outputs.ruleset_id
            }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Compare expected vs. actual
        run: |
          echo '${{ needs.prepare-smoked-ruleset.outputs.smoked_json }}' \
            | jq --sort-keys . > expected.json
          echo '${{ steps.fetch.outputs.response }}' \
            | jq --sort-keys . > actual.json

          if ! diff -u expected.json actual.json; then
            echo "❌ Mismatch between input and fetched ruleset"
            exit 1
          fi
          echo "✅ Ruleset content matches"
  cleanup-smoked-ruleset:
    needs: [find-smoked-ruleset-id, validate-smoke-ruleset]  # ← ensures this job waits for validation to finish
    if: always()  # ← “always” makes it run even if validate‐smoke‐ruleset failed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Remove smoke ruleset
        uses: ./.github/actions/github-rest-api
        with:
          method: DELETE
          endpoint: /repos/${{ github.repository }}/rulesets/${{ needs.find-smoked-ruleset-id.outputs.ruleset_id
            }}
          token: ${{ secrets.CI_ADMIN }}
