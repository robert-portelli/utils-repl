---
name: Upsert Default Branch Ruleset
on:
  workflow_dispatch:
    inputs:
      ruleset_path:
        description: "the path to the ruleset json"
        required: true
        type: string
        default: "./.github/rulesets/branch-default.json"
  workflow_call:
    inputs:
      ruleset_path:
        description: "the path to the ruleset json"
        required: true
        type: string
    secrets:
      GH_TOKEN:
        required: true
      CI_ADMIN:
        required: true
jobs:
  upsert-ruleset:
    name: "Upsert Ruleset: ${{ inputs.ruleset_path }}"
    runs-on: ubuntu-latest
    # remove these outputs after fully ported to actions
    outputs:
      context: ${{ steps.gate-token.outputs.context }}
      json: ${{ steps.load-json.outputs.json }}
      ruleset_name: ${{ steps.load-json.outputs.ruleset_name }}
      ruleset_id: ${{ steps.upsert-ruleset.outputs.ruleset_id }}
    steps:
      - uses: actions/checkout@v4
      - name: Admin Gate
        uses: ./.github/actions/gate-admin
        with:
          gh_token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
      - name: Detect Token Context
        id: gate-token
        uses: ./.github/actions/gate-token
        # outputs:
        #  context
        with:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          CI_ADMIN: ${{ secrets.CI_ADMIN }}
      - name: "Load Ruleset JSON: ${{ inputs.ruleset_path }}"
        id: load-json
        uses: ./.github/actions/load-json
        # outputs:
        #  json
        #  ruleset_name
        with:
          path: ${{ inputs.ruleset_path }}
          # smoke the ruleset json if caller is local act
          smoke: ${{ steps.gate-token.outputs.context == 'act' }}
      - name: "Upsert Ruleset: ${{ steps.load-json.outputs.ruleset_name }}"
        id: upsert-ruleset
        uses: ./.github/actions/upsert-ruleset
        # outputs:
        #  ruleset_id
        with:
          json: ${{ steps.load-json.outputs.json }}
          ruleset_name: ${{ steps.load-json.outputs.ruleset_name }}
          gh_token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          ci_admin: ${{ secrets.CI_ADMIN }}
      - name: "Validate Ruleset: name = ${{ steps.load-json.outputs.ruleset_name }},
          id = ${{ steps.upsert-ruleset.outputs.ruleset_id }}"
        uses: ./.github/actions/validate-ruleset
        # outputs:
        #  No outputs
        with:
          expected_json: ${{ toJSON(fromJSON(steps.load-json.outputs.json)) }}
          ruleset_id: ${{ steps.upsert-ruleset.outputs.ruleset_id }}
          gh_token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          ci_admin_token: ${{ secrets.CI_ADMIN }}
      - name: "Delete Temporary Ruleset: ${{ steps.load-json.outputs.ruleset_name
          }} (id: ${{ steps.upsert-ruleset.outputs.ruleset_id }})"
        if: ${{ steps.gate-token.outputs.context == 'act' }}
        uses: ./.github/actions/cleanup-temp-ruleset
        # outputs:
        #  No outputs
        with:
          ruleset_id: ${{ steps.upsert-ruleset.outputs.ruleset_id }}
          gh_token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          ci_admin_token: ${{ secrets.CI_ADMIN }}
